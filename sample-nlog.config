<?xml version="1.0" encoding="utf-8" ?>
<nlog xmlns="http://www.nlog-project.org/schemas/NLog.xsd"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">

  <targets>
    <!-- 
    This target sends logs to your LogReceiver application using JSON format over TCP.
    The JsonLayout provides structured data that the LogReceiver can parse directly.
    
    Key benefits of this format:
    1. Structured JSON data with proper field mapping
    2. TCP reliability (no packet loss like UDP)
    3. Automatic handling of multi-line messages (like exception stack traces)
    4. No custom delimiters needed - JSON parsing handles message boundaries
    -->
    <target xsi:type="Network" 
            name="tcp_target" 
            address="tcp://127.0.0.1:4505"
            keepConnection="true"
            connectionCacheSize="5">
      <layout xsi:type="JsonLayout">
        <attribute name="time" layout="${longdate}" />
        <attribute name="level" layout="${uppercase:${level}}" />
        <attribute name="logger" layout="${logger}" />
        <attribute name="message" layout="${message}" />
        <attribute name="exception" layout="${exception:format=toString}" />
      </layout>
    </target>
    
    <!-- Optional: Also log to file for backup -->
    <target xsi:type="File" 
            name="file_target"
            fileName="logs/${shortdate}.log"
            layout="${longdate} ${uppercase:${level}} ${logger} ${message}" />
  </targets>

  <rules>
    <!-- Send all logs to both TCP (LogReceiver) and file -->
    <logger name="*" minlevel="Trace" writeTo="tcp_target,file_target" />
  </rules>
</nlog>
